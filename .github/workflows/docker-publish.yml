name: Docker Image CI

on:
  push:
    branches: [ "prod" ]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: downcase REPO
        run: |
          echo "REPO=${REPOSITORY@L}" >> $GITHUB_ENV
          echo REPO
    
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for versioning

      - name: Set variables
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "NEW_VERSION=$VER" >> $GITHUB_ENV

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BUILD_NUMBER=$(echo "${{ github.run_id }}" | tr -d '[:space:]')  # Use run_id as build number
            echo "NEW_VERSION=${VER}-prev-${BUILD_NUMBER}" >> $GITHUB_ENV
          else
            echo "NEW_VERSION=$VER" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push DCA Service image
        id: push_dca
        uses: docker/build-push-action@v6.10.0
        with:
          platforms: linux/amd64, linux/arm64
          context: "{{defaultContext}}:src"
          file: Kbot.DcaService/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO }}/dca-service:${{ github.ref == 'refs/heads/prod' && 'latest' || 'latest-dev' }}
            ${{ env.REGISTRY }}/${{ env.REPO }}/dca-service:${{ env.NEW_VERSION }}

      - name: Build and push Mail Service image
        id: push_mail
        uses: docker/build-push-action@v6.10.0
        with:
          platforms: linux/amd64, linux/arm64
          context: "{{defaultContext}}:src"
          file: Kbot.MailService/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO }}/mail-service:${{ github.ref == 'refs/heads/prod' && 'latest' || 'latest-dev' }}
            ${{ env.REGISTRY }}/${{ env.REPO }}/mail-service:${{ env.NEW_VERSION }}

      - name: Generate artifact attestation DCA
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO}}/dca-service
          subject-digest: ${{ steps.push_dca.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation Mail
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO}}/mail-service
          subject-digest: ${{ steps.push_mail.outputs.digest }}
          push-to-registry: true   
      
      - name: Tag changes
        if: github.ref == 'refs/heads/prod'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

